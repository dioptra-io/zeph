[tool.poetry]
name = "dioptra-zeph"
version = "1.2.6"
description = "An orchestrator for distributed IP tracing"
authors = ["Matthieu Gouel <matthieu.gouel@protonmail.com>"]
homepage = "https://github.com/dioptra-io/zeph"
readme = "README.md"
license = "MIT"
packages = [
    { include = "zeph" },
    { include = "zeph_utils" },
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
diamond-miner = "^1.0.0"
dioptra-iris-client = "^0.4.5"
pyasn = "^1.6.1"
pych-client = {extras = ["orjson"], version = "^0.3.0"}
py-radix = "^0.10.0"
requests = "^2.25.0"
tqdm = "^4.64.0"
typer = ">=0.5,<0.7"

[tool.poetry.dev-dependencies]
black = "^22.3"
bump2version = "^1.0.1"
flake8 = "^5.0.4"
mypy = "^0.971"
pre-commit = "^2.19.0"
pytest = "^7.1"
pytest-cov = "^3.0.0"

[tool.poetry.scripts]
zeph = "zeph.main:app"
zeph-bgp-convert = "zeph_utils.zeph_bgp_convert:run"

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:$",
    "if __name__ == \"__main__\":$",
    "pass$",
    "\\s\\.\\.\\.$",
    "raise NotImplementedError$"
]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--capture=no --doctest-modules --log-cli-level=info --strict-markers --verbosity=2"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
